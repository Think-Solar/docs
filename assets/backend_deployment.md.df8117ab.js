import{f as e,a as t,c as a,e as s}from"./app.0db9ce93.js";const l="/docs/assets/pr.49c92567.png",f=JSON.parse('{"title":"Deployment","description":"","frontmatter":{"layout":"doc"},"headers":[{"level":2,"title":"Git workflow","slug":"git-workflow","link":"#git-workflow","children":[]},{"level":2,"title":"Pull requests","slug":"pull-requests","link":"#pull-requests","children":[]},{"level":2,"title":"CI/CD Pipeline","slug":"ci-cd-pipeline","link":"#ci-cd-pipeline","children":[]},{"level":2,"title":"Laravel Forge","slug":"laravel-forge","link":"#laravel-forge","children":[]}],"relativePath":"backend/deployment.md","lastUpdated":1675158570000}'),o={name:"backend/deployment.md"},r=s(`<h1 id="deployment" tabindex="-1">Deployment <a class="header-anchor" href="#deployment" aria-hidden="true">#</a></h1><h2 id="git-workflow" tabindex="-1">Git workflow <a class="header-anchor" href="#git-workflow" aria-hidden="true">#</a></h2><p>The Suite uses a Git-based workflow for deployment.</p><ul><li>Developers work on the <code>dev</code> branch locally or, if they are working on large features, they should check out a dedicated <code>feature</code> branch.</li><li>Once they have finished their work locally, they should make sure they add appropriate tests to ensure their changes haven&#39;t broken anything. They should run their tests locally and make sure everything passes before moving to the next step.</li></ul><p>To run tests locally, developers should make sure the app container is up and running and then run the command:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">sail artisan test</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Running tests outside the container (eg. <code>php artisan test</code>) may result in errors. For example, PHPUnit requires the mbstring PHP extension to be installed, which may not be installed on your local machine.</p></div><p>This command runs all the tests. All tests should pass before moving to the next step.</p><p><strong>ADD LINK HERE</strong> See the testing page for more information on testing.</p><h2 id="pull-requests" tabindex="-1">Pull requests <a class="header-anchor" href="#pull-requests" aria-hidden="true">#</a></h2><p>The next step is to submit a pull request to the <code>master</code> branch. It is important to submit a PR, and not to merge to the <code>master</code> branch directly. This is to ensure that the code is reviewed and tested by our CI/CD pipeline before it is deployed to production.</p><h2 id="ci-cd-pipeline" tabindex="-1">CI/CD Pipeline <a class="header-anchor" href="#ci-cd-pipeline" aria-hidden="true">#</a></h2><p>Our CI/CD pipeline will run a series of tests and checks to ensure that the code is ready for deployment. These include:</p><ul><li>Code formatting (Laravel Pint)</li><li>Static analysis (Psalm)</li><li>Unit/feature tests (PHPUnit)</li></ul><p><img src="`+l+'" alt="An image"></p><p>When submitting a PR, it&#39;s very helpful to include at least the following:</p><ul><li>A descriptive title that clearly summarizes the changes made in the PR. &quot;fixes&quot; and &quot;updates&quot; are not descriptive titles.</li><li>Test cases that produce passing results and demonstrate that the code in the PR does not introduce any new bugs or regressions.</li></ul><p>If the CI/CD steps have successfully completed, developers can merge their own pull requests with the <code>master</code> branch. After the code has been merged, a webhook is sent to our server management tool, Laravel Forge.</p><h2 id="laravel-forge" tabindex="-1">Laravel Forge <a class="header-anchor" href="#laravel-forge" aria-hidden="true">#</a></h2><p>Laravel Forge is a server management tool that allows us to easily manage our servers. The webhook triggered by merging to <code>master</code> will in turn trigger a deployment script on the production server, which pulls the latest code, builds the application and deploys it.</p>',20),i=[r];function n(d,c,h,p,u,m){return t(),a("div",null,i)}const y=e(o,[["render",n]]);export{f as __pageData,y as default};
